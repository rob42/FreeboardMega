
/*
 * Copyright 2010,2011,2012,2013 Robert Huitema robert@42.co.nz
 *
 * This file is part of FreeBoard. (http://www.42.co.nz/freeboard)
 *
 *  FreeBoard is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.

 *  FreeBoard is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.

 *  You should have received a copy of the GNU General Public License
 *  along with FreeBoard.  If not, see <http://www.gnu.org/licenses/>.
 */
// Do not remove the include below
#include "freeboardDue.h"

volatile bool execute = false;
volatile int interval = 0;

void doEvery100(){
	execute=true;
	interval++;
}

void setup()
{
// Add your initialization code here
	//	//setup timers
		if (DEBUG) Serial.println("Start timer..");
		Timer.getAvailable().attachInterrupt(doEvery100).start(100);


		if (DEBUG) Serial.println("Setup complete..");
}

// The loop function is called in an endless loop
void loop()
{
//Add your repeated code here
	if (execute) {
			//timer ping
			//do these every 100ms
			//autopilot.calcAutoPilot();

			if (interval % 2 == 0) {
				//do every 200ms
				//wind.calcWindSpeedAndDir();
			}
			if (interval % 50 == 0) {
				//do every 500ms
				//wind.calcWindSpeedAndDir();
				//wind.calcWindData();
				//nmea.printWindNmea();
				//fire any alarms
				//alarm.checkAlarms();
				//model.writeSimple(Serial);
			}
			if (interval % 100 == 0) {
				Serial.print("freeMemory()=");
				//Serial.println(freeMemory());
				//do every 1000ms
				//anchor.checkAnchor();
				//alarm.checkWindAlarm();
				//alarm.checkLvlAlarms();
				//nmea.printTrueHeading();

			}

			execute = false;
		}
}
